name: CI

on:
  push:
    branches:
      - master
  pull_request: ~

jobs:

  lint:
    name: Lint
    runs-on: 'ubuntu-latest'
    timeout-minutes: 5

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: 'Get composer cache directory'
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: 'Cache dependencies'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 'Install dependencies'
        run: composer update --prefer-dist

      - name: 'Check style'
        run: vendor/bin/php-cs-fixer fix --dry-run --no-interaction --diff

  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8
    continue-on-error: ${{ matrix.allow-failure == 1 }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Previous Symfony versions & lowest deps
          - name: 'Test lowest deps [Linux, PHP 7.3]'
            os: 'ubuntu-latest'
            php: '7.3'
            composer-flags: '--prefer-lowest'

          # Previous Symfony versions
          - name: 'Test 5.2 Symfony [Linux, PHP 8.0]'
            os: 'ubuntu-latest'
            symfony: '5.2.*'
            php: '8.0'

          # Previous PHP versions
          - name: 'Test latest Symfony [Linux, PHP 7.3]'
            os: 'ubuntu-latest'
            php: '7.3'

          - name: 'Test latest Symfony [Linux, PHP 7.4]'
            os: 'ubuntu-latest'
            php: '7.4'

          # Most recent versions
          - name: 'Test latest Symfony [Linux, PHP 8.0] (with code coverage)'
            os: 'ubuntu-latest'
            php: '8.0'
            code-coverage: true

          - name: 'Test latest Symfony [Windows, PHP 8.0]'
            os: 'windows-latest'
            php: '8.0'

          # bleeding edge (unreleased dev versions where failures are allowed)
          - name: 'Test Next Symfony [Linux, PHP 8.1] (allowed failure)'
            os: 'ubuntu-latest'
            php: '8.1'
            symfony: '5.4.*@dev'
            composer-flags: '--ignore-platform-req php'
            allow-unstable: true
            allow-failure: true

          - name: 'Test Symfony 6.0 [Linux, PHP 8.1] (allowed failure)'
            os: 'ubuntu-latest'
            php: '8.1'
            symfony: '6.0.*@dev'
            composer-flags: '--ignore-platform-req php'
            allow-unstable: true
            allow-failure: true

    steps:
      - name: 'Set git to use LF'
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup PHP'
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          extensions: pdo_sqlite, mongodb
          tools: 'composer:v2,flex'

      - name: 'Start MongoDB (Linux)'
        uses: supercharge/mongodb-github-action@1.6.0
        if: ${{ matrix.os == 'ubuntu-latest' }}

      - name: 'Start MongoDB (Windows)'
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install mongodb
        if: ${{ matrix.os == 'windows-latest' }}

      - name: 'Get composer cache directory'
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: 'Cache dependencies'
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-php-${{ matrix.php }}-symfony-${{ matrix.symfony }}-${{ hashFiles('**/composer.json') }}-flags-${{ matrix.composer-flags }}
          restore-keys: ${{ runner.os }}-composer-

      - name: 'Allow unstable packages'
        run: |
          composer config prefer-stable false
          composer config minimum-stability dev
        if: ${{ matrix.allow-unstable }}

      - name: 'Remove packages not allowing Symfony 6 yet'
        run: composer remove --no-update ${{ matrix.composer-flags }} --dev --no-interaction --ansi "nelmio/alice" "api-platform/core" "friendsofphp/php-cs-fixer"
        if: ${{ matrix.symfony == '6.0.*@dev' }}

      - name: 'Require Doctrine MongoDB dependencies'
        run: composer require --no-update ${{ matrix.composer-flags }} --dev --no-interaction --ansi "doctrine/mongodb-odm:^2.2" "doctrine/mongodb-odm-bundle:^4.3"
        if: ${{ matrix.php != '8.1' }} # For now: Could not install mongodb on PHP 8.1.0-dev

      - name: 'Install dependencies'
        run: composer update --prefer-dist ${{ matrix.composer-flags }} --ansi
        env:
          SYMFONY_REQUIRE: "${{ matrix.symfony }}"

      - name: 'Run PHPUnit tests'
        run: vendor/bin/simple-phpunit --testdox --verbose ${{ matrix.code-coverage && '--coverage-text --coverage-clover build/logs/clover.xml' }}
